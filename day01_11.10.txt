day01_11.10
 - 컴퓨터는 반도체로 이루어져 있고, 이러한 반도체는 전기신호가 O,X로 신호를 받는다.
 - 0,1 즉, 2진수로 신호를 받는다.
 - 1bit -> 0,1로 표현되는 최소 단위
 - 1byte = 8bits


1.실습환경 구축하기
2. 변수와 자료형
 -. 데이터(사과,수박) -> 메모리 = 데이터 담을 공간(바구니,비닐봉지,박스)
  ex) 사과 -> 바구니,비닐봉지,박스(공간) / 수박 -> 큰 바구니,비닐봉지,박스
 -. 변수명 : 메모리를 담을 공간의 별명(메모리 이름), 
    변수 : 데이터 담는 공간(메모리) && 내부 데이터 값이 변할 수 있음.
 -. 데이터의 크기 -> 담는 공간의 크기가 달라진다.
 -. 변수 선언 및 대입식
 : 자료형 변수명 = 데이터 값; / 자료형은 변수의 크기 및 특징을 주는 것.
 -. 변수와 상수
  -> 변수 : 데이터 값이 변함.
      상수 : 데이터 값이 변하지 않음(final - 마지막, 최종적), 관례로 상수를 표현할 때에는 대문자, 단어와 단어 사이 (_) 언더바를 사용.

 -. 자료형 (기본 자료형 - 일정공간을 가지고 있는 자료형)
 1) 숫자
  (1) 정수 : 소숫점이 없는 수, 음수,양수,0 / 1byte(byte) < 2byte(short) < 4byte(int) < 8byte(long)
   -> 1byte 중 제일 앞 쪽의 비트는 '부호'를 나타낸다.
   -> 1byte의 비트 갯수 : -2^7 ~ 2^7-1(0을 빼고)
   -> 정수형 자료형을 어떤걸 정의해도 int로 선언 -> 인식함.
   -> int -> byte
   -> int -> long : int 범위가 넘는 수치를 입력하면 오류
     -> 처음부터 long으로 인식해라 라는 의미로 숫자 + L의 형태로 나타낸다.
   -> int -> short
   -> int가 가장 효율적인 정수 자료형이다.
  (2) 실수 : 소수점이 있는 수 / 4byte(float) < 8byte(double)
   -> double -> float -> 처음부터 자바에서 실수를 float형으로 인식하도록 하기위해서 'f or F'를 붙혀줌.
   -> double이 실수 중 가장 효율적인 실수 자료형이다.
 2) 문자형 / 2byte(char)
  (1) a,b,c ...
  (2) ★컴퓨터는 실제 문자형을 인식 못하고 이를 특정 숫자로 인식한다.
   -> 이러한 특정 숫자를 표로 정의한 것이 아스키코드표 이다.
   -> 아스키 코드 - 1byte로 구성된 문자표(영대소문자, 숫자, 특수문자) / 특문-숫자-특문-영대문자-특문-영소문자-특문

 3) 논리형(참 true, 거짓 false) / 1byte(boolean) / 1바이트 이나 참 거짓 값만 있어서 큰 의미는 없음.

3. 상수와 리터럴
- 상수
 1) 변수 : 변하는 수
 2) 상수 : 변하지 않는 수(final - 마지막, 최종적)
 3) 이름짓기 관례(권장) : 
  (1) 상수를 표현할 때에는 주로 대문자, 단어와 단어 상이 (_)언더바 사용. ex) final int MAX_BYN
  (2) 변수는 소문자로 첫문자를 시작, 단, 2개 이상의 단어 시 2번째 단어는 첫글자가 대문자이어야한다. - 낙타 표기법
      ex) int noOfStudent
 4) 이름짓기 규칙(필수) :
  (1) 변수명에 사용할 수 있는 문자(알파벳, 숫자, 특수문자(_,$)) 이렇게만 사용 가능.
  (2) 아라비아 숫자는 맨 앞에 올수 없음. ex) int 1st; ->(x), int s1t; ->(o)
  (3) 예약어(new, if, continue...)는 사용이 불가능 하다.
   예제1) _abc(o), $money(o), 1st(x), first1(o)

- 리터럴(literal) : 문자, 숫자, 논리값(true, false)
 ex) 10, 'A',true... -> 리터럴 상수(두 변수에 같은 값을 대입할 경우 두 변수는 같은 값을 가리킴)

4.형변환(type casting) 
 1) 작은 자료형 -> 큰자료형(자동 형변환) : 묵시적 형변환
 2) 큰 자료형 -> 작은 자료형(수동 형병환) : 명시적 형변환
 ex) byte num2 = (byte)num1;











