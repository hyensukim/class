12.09
Enum 클래스(열거형)
 - 상수만을 위한 클래스 -> 많이 사용함!!
 - JDK 1.5에 추가된 내용
 - java.lang.Enum 클래스로부터 상속 받은 클래스
 - 각 상수 => Enum 클래스의 정적 상수 객체
 - 추상클래스
 - 생성자 -> private : 객체를 내부에서만 사용 가능하다.

애너테이션
 - 주석, 주해, 설명, 정보 제공
 - 메서드나 매개변수에 대한 정보를 프로그램에 제공하는 것. -> 기능 X
 - 표준 애너테이션
 @Override 
  -. 현재 메서드가 재정의 된 메서드
  -. 컴파일러에게 정보 전달
  -. 컴파일러가 상위클래스에 동일 메서드가 있는 지 체크
 @Deprecated
  -. 
 @FunctionalInterface
  -.
 
 - 메타 애너테이션
  -. 애너테이션을 정의할 수 있는 애너테이션
  @Target
   -. 애너테이션의 적용 범위(메서드, 필드, 매개변수, 클래스, 인터페이스)
	ElementType
  @Retention
   -. 애너테이션의 유지 범위(실행 시점)
    -> SOURCE : 소스상에만 존재, 컴파일시에 제거, 컴파일러에게 정보 전달 목적
    -> CLASS : 소스와 클래스에서 존재, 실행시에는 무시(기본값)
    -> RUNTIME : 실행시 유지(정보 제공)
	RetentionPolicy

java.lang.annotation
 implements java.lang.annotation.Annotation;

Class 클래스 - 클래스 정보
 1. 클래스명.class(static)
 2. Object 클래스 - getClass()
 3. Class.forName()
=========================================
쓰레드

1. 프로세스와 쓰레드
 - 프로세스? 실행중인 프로그램
  -. 데이터, 메모리
  -. 함수(함수가 실행되는 메인 메서드 + 스텍메모리 -> 쓰레드)
  -. 데이터를 사용해서 기능을 수행하는 것.
  -. 프로세스 내에 여러개의 쓰레드를 가질 수 있다.
   -> 프로세스의 메모리 한계에 따라서 수가 결정된다.
   -> 스택메모리
 - 멀티쓰레딩?
  -. 쓰레드가 여러개(작업대가 여러개)
  -. CPU, 메모리 자원을 효율적으로 사용할 수 있다.
  -. 사용성이 증대.
  -. 단점
   -> 쓰레드가 같은 자원을 공유해서 작업을 진행하여 데이터 공유시
       동기화 문제 발생, 교착상태가 발생하는 문제

쓰레드 -> 작업대 -> 기능 -> 함수 -> 주가 되는 함수 + 호출스택 = 쓰레드

2. 쓰레드의 구현과 실행
 1) Thread 클래스 상속
 - 상속을 받으면 다른 클래스 상속이 불가 -> 기능 확장이 제한됨.

 2) Runnable 인터페이스를 구현
 - 다른 클래스 상속 -> 기능 확장 O

 3) 실행 - start();
 - 호출 스택 + run() - 실행

3. 싱글쓰레드와 멀티쓰레드
 - 멀티쓰레드 : 시분할 방식(빠르게 시분할 방식으로 진행되어 동시다발적으로 진행되는 것처럼 보인다.)

4. 쓰레드의 우선순위
 - 1~10 // 싱글 코어, NOR : 5
 - setPriority()

5. 쓰레드의 그룹





















