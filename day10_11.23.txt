11.23
복습
1. 추상클래스
 - 메서드 -> 상수와 같다. 즉, 구현체는 바뀌지 않는다.(구체적) ->> 구현체가 없는 경우(추상적)
 - 객체생성불가.
 - 공통기능 : 하위클래스에서 사용할 공통 멤버변수, 메서드를 정의 가능하다.

2. 추상클래스와 다형성
 - 추상클래스 자체로는 객체 생성이 불가능하지만, 하위 클래스가 '상속'을 통해 추상 클래스의
   자원을 사용가능하게 되어 사용 가능하다.

3. final 예약어 - 마지막, 변경불가
 - 변수 : 상수(변하지 않는 수) -> 데이터 영역 내 상수영역에 하나의 메모리로만 존재함.
 - 메서드 : 오버라이드 불가 -> 중요한 메서드인 경우, 하위에서 재정의 못하게 하기 위함.
 - 클래스 : 상속 불가 -> 클래스 상속 자체가 불가함.

4. 인터페이스
 - interface : 규칙, 규약 (참고) API(Application Programming Interface) : 가이드라인 -> 카카오 개발센터
 - 프로그래밍 개발 가이드 라인, 규칙, 명세
 - 추상메서드만 담겨있다.
 - 클래스명 implements 인터페이스명{ } : 키워드가 다르다.
 - 추상클래스 보다 가이드라인(설계) 목적에 좀 더 특화되어 있음.
 - 인터페이스는 자체 객체 생성을 안하기 때문에 외부에 접근 가능한 정적 상수(public static final)
    를 사용한다.

5. 클래스에서 인터페이스 구현하기

6. 인터페이스의 요소 살펴보기
 - 인터페이스 상수
  -> 인터페이스는 자체 객체 생성 X
  -> 외부 접근 가능한 정적 상수(public static final)만 사용 가능함.
 - 추상 메서드
 - default 메서드
  ->만약, Calculator 하위클래스에 100개의 추상 메서드가 있는 경우, 클래스에 모든 추상메서드를 
     구현해야한다.
 -> defualt 메서드 : 상위클래스에서 정의한 인스턴스 메서드 -> 하위클래스에서 구현하지 않고도 
     사용가능한 메서드
 - 정적메서드
  -> 객체생성 X, 인터페이스명 호출
 - private 메서드

7. 인터페이스 상속
 - 인터페이스간의 상속(extends)
 - 상속되어 있는 인터페이스에 중복된 메서드가 있어도 크게 상관없다.
  -> 실제 정의는 상속받는 클래스에서 되기 때문에 인터페이스에 구현된 메서드는 크게 상관이 없는 
      것이다.

8. 인터페이스 구현과 형변환

 쇼핑몰 예제 - Buy, Sell


9. 내부클래스 : 클래스 내부에 있는 클래스.

 - 인스턴스 내부 클래스
  -> instance : 실체 = 생성된 객체 == 객체

 - 정적 내부 클래스 : 정적 변수, 정적 메서드
  -> static -> 일반 클래스와 큰 차이가 없다.

 - ★★★지역 내부 클래스★★★
  -> 메서드(함수) 안
  -> 추상클래스
  -> 인터페이스
  -> 추상클래스, 인터페이스 객체를 생성할 수 있는 조건?
   -. 특정 환경(지역 내부, 멤버 변수)
   -. 미구현된 메서드를 구현함으로서 객체 생성이 가능하다.
	
	Runnable : 인터페이스

 - 익명 내부 클래스
