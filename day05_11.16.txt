11.16

복습
객체 - object
 - 특성
 - 행위
 - 상호작용
ex) 
자동차 공장 <- 설계도
자동차
 - 엔진,바퀴...
 - 움직인다, 정지한다. ..

클래스 : 객체를 만드는 설계도
 - 구조 :
class 클래스명 {
	멤버변수
	메서드()<=함수>
}
ex)
class Person {
	String name;
	int age;

	void walk(){

	}
}
 - 객체 생성식
 Person person = new  Person();
 - 클래스는 객체를 생성해야 멤버변수 및 메서드를 사용할 수 있다.
 - 클래스명 : 앞글자 대문자, 시작되는 단어 첫글자 대문자 ex) Student, CarDoor...

메서드(함수)
 : 메서드는 함수의 일종이다
 - 메서드 구조
 : (접근제한자) 반환자료형 함수명(매개변수...) { // 매개변수가 없는 메서드도 있다.
	//프로그램이 실행되는 영역
	return(예약어) 반환값; // 반환값이 없는 경우도 있다. -> 반환자료형을 void로 사용함.
}
 - 메서드명 : 단어의 첫글자 대문자(첫 단어의 첫글자는 소문자 == 변수명과 동일)
   ex) printOrder...

main() 메서드
 - 클래스의 시작점.
 - 반드시 stack 구조로 메모리를 저장해야한다.
 - main 내 로직들이 다 끝나야 끝낼 수 있다.

인스턴스와 힙메모리
 - 힙 메모리(힙 영역)
 - new라는 예약어가 객체를 생성해준다.(객체 관련 공간을 생성해준다.)
  -> 데이터 영역에 로딩된 클래스를 확인하여 힙메모리에 필요 공간을 생성함.
 - 객체의 실제 데이터는 힙메모리에 저장되고, 이 힙메모리가 어디있는지 그 주소는 스택 메모리에 저장된다.
  = 이렇게 지역변수가 객체 데이터 주소를 '참조한다'라고 한다.
 - instance(인스턴스) : 실체, 존재하는 것. == 객체

인스턴스와 참조변수
 - 클래스 형태의 자료형 전부 '참조 자료형'이다. - 전부 크기가 동일하다. : 이러한 클래스 참조 자료형들은 주소를 참조한다.

참조 자료형과 기본 자료형
 - 기본 자료형 : 일정 공간을 가지고 값을 저장
 - 참조 자료형 : 객체의 주소값을 참조하는 자료형, 실제 저장값 : 주소값(정수) - 4byte.

생성자(함수)
 - 객체를 실제 생성해주는 메서드(함수).
 - 객체 생성이 주요 역할임.
 - 메서드와 다르게 반환 타입이 없다.
 - 클래스명과 동일한 이름을 가짐.
 - 기본 생성자 : 별도로 정의하지 않아도 기본적으로 컴파일러가 추가해주는 메서드
 - 일반적으로 멤버변수를 초기화할 때 사용한다.(부가적인 기능)
 - 생성자가 하나도 없을 때에만 기본 생성자가 생성된다.(생성자가 없을 경우, 객체를 못만듦 그래서 컴파일러에서 기본 생성자를 추가해주는 것이다.)

생성자 오버로딩
 - 다양한 매개변수를 가진 동일명칭의 생성자를 가진다.

메서드 오버로딩
 - 다양한 매개변수, 다양한 반환값을 가진 동일 명칭의 메서드를 가진다.

접근제어자
 - public > protected > default > private ; //범위 크기 순서
 - public : 패키지에 상관없이 모든 클래스에서 접근 가능하도록 클래스, 메서드, 멤버 변수 제어하는 제어자를 의미.
 - protected : 동일 패키지 내에서 클래스 내,외부 접근이 가능, 타 패키지에서는 상속을 통해서 클래스 내부에서만 접급 가능.
 - default : 동일 패키지 내에서 클래스 내부 외부에 접근이 가능하다.
 - private : 동일 클래스 내부에서만 접근 가능(외부 접근 X) -> 정보은닉

임포트(import)
 - 다른 패키지에 있는 클래스를 불러올 때 사용하는 것.
 - 구조 : import 패키지명.클래스명

메모리 영역
1. 데이터 영역(코드 & 상수 영역)
 - 클래스 로더에 의해 모든 클래스 파일이 실행되기 위해 올라가는 메모리.
2. 스택 영역
3. 힙 영역
 - 힙 메모리(힙 영역)
 - new라는 예약어가 객체를 생성해준다.(객체 관련 공간을 생성해준다.)
  -> 데이터 영역에 로딩된 클래스를 확인하여 힙메모리에 필요 공간을 생성함.
 - 객체의 실제 데이터는 힙메모리에 저장되고, 이 힙메모리가 어디있는지 그 주소는 스택 메모리에 저장된다.








