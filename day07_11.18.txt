11.18
복습
데이터 메모리 영역 - 코드 & 상수
클래스 로더 -> 클래스

스택 메모리 영역 - 함수(메서드)

힙 메모리 영역 - 객체

기본자료형(literal 상수) VS 참조자료형
 - 기본 자료형 : 정수,실수,논리형,문자형

 - 참조 자료형 : 힙메모리의 인스턴스에 주소값을 참조한다

인스턴스(instance) : 실체, 힙메모리 공간 안에 객체, 생성된 객체
instanceof
s1 instanceof Student == s1이라는 객체는 Student 클래스형인가? 라고 물어보는 API

접근제어자
public > protected > default > private

public - 모든 패키지에서 접근이 가능함.
 다른 패키지의 경우 -> import 하여 사용
protected - 동일 패키지에서 접근 가능 + 상속시 외부클래스의 내부에만 접근 가능
default - 동일 패키지에서 접근 가능.
private - 자신 클래스 내에서만 접근 가능.

정보은닉
 - 멤버변수에 값을 직접 대입 -> 지양
 - 값의 통제가 불가하여 오류 발생 확률이 크다. ex) 날짜 결과 출력 시 2월 28일까지 제한 불가함.
 - private 접근 제한 -> 외부 접근 X
 - 별도의 외부 접근 가능한 메서드 -> 값 지정(setter), 값 조회(getter)

지역변수 this 예약어
 - 클래스 내부에 있는 지역변수 : 값은 생성될 객체의 주소값을 내부에서 참조.
 - 메서드 this() : 클래스 내부에서 생성자를 호출
================================================================
객체 지향 프로그래밍1
1. static 변수, 클래스 변수, 클래스 메서드
 - static : 정적인, 움직이지 않는다, 고정되어 있다.
 - 변수는 공간이 필요하며, 이 메모리는 정적인 메모리이다.
 - 데이터 영역 메모리(정적) , 스택 영역 메모리(동적) - 메모리의 생성과 제거 반복.
   , 힘 영역 메모리(동적) - 메모리의 생성과 제거를 반복.
 - 정적변수 - 데이터 영역에 생성되는 공간.
 - 정적 변수는 정적인 방법으로 접근하는 것을 권장한다. -> 클래스명으로 접근한다.(객체 생성 X) = 클래스명.변수명
 - 정적 변수 == 클래스 변수(클래스 로더에 의해 클래스가 데이터 메모리 영역에 로딩 될 때 딱 한번 
   함께 초기화되어 메모리가 하나이다. -> 객체 처럼 계속 생성되지 않는다.)

 - 정적 메서드(클래스 메서드) : 메서드 안에서 인스턴스 변수(=멤버변수), 인스턴스 메서드 사용이 불가능하다.
   but, 굳이 써야하는 경우에는 객체(인스턴스)를 생성하여 사용해주면 된다.

데이터 영역(코드 & 상수 영역)
 : 상수, (.java)코드, 리터럴 상수, static 변수, 메서드.
 - ★ 클래스로더 -> 클래스(데이터 영역)를 로딩.

메서드 : 상수와 같다. - 하나의 공간만 초기화 하고 이를 공유하여 사용함.
 - 리터럴 상수

2. 변수의 유효범위
 1) 지역변수
  - stack에서 생성되고 소멸
  - 함수 지역내에서만 유효한 변수
 2) 인스턴스 변수(멤버 변수)
  - heap에서 생성되고 소멸
  - 객체가 생성되어야만 접근 할 수 있는 변수
 3) 정적 변수(static 변수)
  - 데이터 영역
  - 클래스명으로 객체 생성 상관없이 접근 가능.

3. 싱글톤 패턴
 - SingleTon : 객체를 단 한번만 생성하는 패턴.
 1) 외부에서 객체를 생성 못하게 차단 -> private 생성자 메서드()

 2) 내부에서 정적 변수에 객체를 생성(private)

 3) 외부에서 객체에 접근 할 수 있는 정적 메서드를 정의
 public static Company getInstance(){
	return instance
}

객체지향 프로그래밍2

1. 상속이란?

2. 클래스 상속.

3. 상위 클래스로 묵시적 클래스형 변환.
